version: "3.9"

services:
  front:
    image: sermalenk/skypro-front:lesson-38
    ports:
      - 8080:80
    depends_on:
      - api
  api:
    build:
      context: .
    depends_on:
      postgres:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    volumes:
      - ./.docker_env:/app/.env
  migrations:
    build:
      context: .
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./.docker_env:/app/.env
    command: python manage.py migrate

  postgres:
    image: postgres:13.0-alpine
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_DB: todoist_db
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d todoist_db" ]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data

volumes:
  postgres-data: